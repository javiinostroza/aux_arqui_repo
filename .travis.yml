language: ruby

sudo: required

services: docker

script: 
    - cd backend
    - sed -i -e 's/\r$/\n/' start.sh
    - sed -i -e 's/\r$/\n/' stop.sh
    - sed -i -e 's/\r$/\n/' install.sh #correct files ending
    - docker-compose -f local-docker-compose.yml build
    - docker-compose -f local-docker-compose.yml run 16arqsisv2 rspec --format documentation spec/models/user_spec.rb
    - docker-compose -f local-docker-compose.yml run 16arqsisv2 rspec --format documentation spec/models/room_spec.rb
    - docker-compose -f local-docker-compose.yml run 16arqsisv2 rspec --format documentation spec/models/room_message_spec.rb
    - zip -r latest *
    - mkdir -p dpl_cd_upload
    - mv latest.zip dpl_cd_upload/latest.zip
    
after_success:
    - docker --version
    - pip install --user awscli 
    - aws--file-exists-behavior RETAIN
    - export PATH=$PATH:$HOME/.local/bin
    - aws ecr get-login-password --region us-east-2 | docker login --username AWS --password-stdin 556070822500.dkr.ecr.us-east-2.amazonaws.com
    - docker build -t 16arqsisv2 .
    - docker tag 16arqsisv2:latest $AWS_ECR_API:latest
    - docker push $AWS_ECR_API:latest
    - docker images
    
deploy:
- provider: s3
  access_key_id: $AWS_ACCESS_KEY_ID
  secret_access_key: $AWS_SECRET_ACCESS_KEY
  local_dir: dpl_cd_upload
  skip_cleanup: true 
  bucket: "16arqsis-travis-s3"
  region: us-east-2 
  upload-dir: latest
  on:
    branch: main
- provider: codedeploy
  access_key_id: $AWS_ACCESS_KEY_ID
  secret_access_key: $AWS_SECRET_ACCESS_KEY
  bucket: "16arqsis-travis-s3"
  key: latest/latest.zip
  bundle_type: zip
  application: 16v2-travis
  deployment_group: 16v2-travis-staging
  region: us-east-2
  wait_until_deployed: true
  on:
    branch: main