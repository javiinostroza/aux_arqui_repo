{"ast":null,"code":"var _jsxFileName = \"/home/javiera/Documents/UNIVERSIDAD/2020-2/Arquitectura de Software/aux_arqui_repo/client/src/components/Chat/Chat.js\";\nimport React, { useState, useEffect } from \"react\";\nimport queryString from 'query-string';\nimport { url_display_chat, url_send_message } from \"./../Routes\";\nimport io from 'socket.io-client'; // IMPORTAR ROUTES PARA MENSAJES Y CHAT. Y TERMINAR ESTO\n\nimport './Chat.css';\nimport '../general.css';\nimport InfoBar from '../InfoBar/InfoBar';\nimport Input from '../Input/Input';\nimport Messages from '../Messages/Messages';\nlet socket;\n\nconst Chat = ({\n  location\n}) => {\n  const [name, setName] = useState('');\n  const [room, setRoom] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState('');\n  const ENDPOINT = 'ec2-18-219-25-136.us-east-2.compute.amazonaws.com:5000';\n  useEffect(() => {\n    const {\n      room,\n      name\n    } = queryString.parse(location.search);\n    setName(name);\n    setRoom(room);\n    console.log(\"name: \", name);\n    console.log(\"room: \", room);\n    var requestOptions = {\n      method: 'GET',\n      redirect: 'follow'\n    };\n    const url_ = url_display_chat + room;\n    fetch(url_, requestOptions).then(response => {\n      return response.json().then(data => {\n        const list = data.messages;\n        list.sort((a, b) => {\n          if (a.created_at > b.created_at) {\n            return 1;\n          } else {\n            return -1;\n          }\n        });\n        console.log(\"estos son los mensajes: \", data);\n        setMessages(list);\n        return data;\n      }).catch(err => {\n        console.log(err);\n      });\n    });\n  }, []);\n\n  const sendMessage = event => {\n    event.preventDefault();\n    var myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\");\n    var urlencoded = new URLSearchParams();\n    urlencoded.append(\"user_id\", window.localStorage.getItem('userId'));\n    urlencoded.append(\"room_id\", room);\n    urlencoded.append(\"message\", message);\n    var requestOptions = {\n      method: 'POST',\n      headers: myHeaders,\n      body: urlencoded,\n      redirect: 'follow'\n    };\n    fetch(url_send_message, requestOptions).then(response => {\n      return response.json().then(data => {\n        return data;\n      }).catch(err => {\n        console.log(err);\n      });\n    });\n    window.location.reload();\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Full\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Console\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: 'ChatContainer',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(InfoBar, {\n    room: room,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Messages, {\n    messages: messages,\n    name: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    message: message,\n    setMessage: setMessage,\n    sendMessage: sendMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 21\n    }\n  }))));\n};\n\nexport default Chat;","map":{"version":3,"sources":["/home/javiera/Documents/UNIVERSIDAD/2020-2/Arquitectura de Software/aux_arqui_repo/client/src/components/Chat/Chat.js"],"names":["React","useState","useEffect","queryString","url_display_chat","url_send_message","io","InfoBar","Input","Messages","socket","Chat","location","name","setName","room","setRoom","messages","setMessages","message","setMessage","ENDPOINT","parse","search","console","log","requestOptions","method","redirect","url_","fetch","then","response","json","data","list","sort","a","b","created_at","catch","err","sendMessage","event","preventDefault","myHeaders","Headers","append","urlencoded","URLSearchParams","window","localStorage","getItem","headers","body","reload"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport queryString from 'query-string';\nimport {url_display_chat, url_send_message} from \"./../Routes\";\nimport io from 'socket.io-client';\n\n// IMPORTAR ROUTES PARA MENSAJES Y CHAT. Y TERMINAR ESTO\n\n\nimport './Chat.css'\nimport '../general.css'\n\nimport InfoBar from '../InfoBar/InfoBar';\nimport Input from '../Input/Input';\nimport Messages from '../Messages/Messages';\nlet socket;\n\n\n\nconst Chat = ({ location }) => {\n    const [name, setName] = useState('');\n    const [room, setRoom] = useState('');\n    const [messages, setMessages] = useState([]);\n    const [message, setMessage] = useState('');\n    const ENDPOINT = 'ec2-18-219-25-136.us-east-2.compute.amazonaws.com:5000'\n    \n\n    useEffect(() => {\n        const {room, name} = queryString.parse(location.search);\n        setName(name);\n        setRoom(room);\n        console.log(\"name: \", name);\n        console.log(\"room: \", room);\n\n        var requestOptions = {\n            method: 'GET',\n            redirect: 'follow'\n          };\n        const url_ = url_display_chat + room;\n        fetch(url_, requestOptions)\n            .then((response) => {\n                return response.json().then((data) => {\n                    const list = data.messages\n                    list.sort((a,b) => {\n                        if(a.created_at > b.created_at){\n                            return 1\n                        }else{\n                            return -1\n                        }\n                    })\n                    console.log(\"estos son los mensajes: \", data)\n                    setMessages(list);\n                    return data;\n                }).catch((err) => {\n                    console.log(err);\n                })\n            })\n\n    }, []);\n\n    \n\n    const sendMessage = (event) => {\n        event.preventDefault();\n        var myHeaders = new Headers();\n        myHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\");\n\n        var urlencoded = new URLSearchParams();\n        urlencoded.append(\"user_id\", window.localStorage.getItem('userId'));\n        urlencoded.append(\"room_id\", room);\n        urlencoded.append(\"message\", message);\n        var requestOptions = {\n        method: 'POST',\n        headers: myHeaders,\n        body: urlencoded,\n        redirect: 'follow'\n        };\n        fetch(url_send_message, requestOptions)\n        .then((response) => {\n            return response.json().then((data) => {\n                return data;\n            }).catch((err) => {\n                console.log(err);\n            });\n        })\n        window.location.reload()        \n    }\n\n\n\n    return (\n        <div className='Full'>\n            <div className='Console'>\n                <div className={'ChatContainer'}>\n                    <InfoBar room={room}/>\n                    <Messages messages={messages} name={name}/>\n                    <Input message={message} setMessage={setMessage} sendMessage={sendMessage}/>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}